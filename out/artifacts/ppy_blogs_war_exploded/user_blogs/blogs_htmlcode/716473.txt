<p><img src="https://img-blog.csdnimg.cn/20201120202945293.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODM5NzA4,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<pre><code class="lang-cpp">#include&lt;cstdio&gt;
#include&lt;iostream&gt;
#include&lt;algorithm&gt;

using namespace std;

int f[30010];


int findRoot(int root)
{
    if(root == f[root])
        return root;
    return f[root] = findRoot(f[root]);
}

int main()
{
    int n, m;
    cin&gt;&gt;n&gt;&gt;m;
    int cnt[30010] = {0};    
    for(int i = 1; i &lt;= n; i++)
    {
        f[i] = i;
        cnt[i] = 1;
    }
    while(m--)
    {
        int j, k;
        scanf(&quot;%d%d&quot;, &amp;j, &amp;k);
        for(int i = 1; i &lt; j; i++) // 假如俱乐部人数超过1 
        {
            int l; // 输入后者 
            scanf(&quot;%d&quot;, &amp;l);
            int x = findRoot(k);
            int y = findRoot(l);
            if(x != y)
            {
                f[x] = y; // 后者将前者融入自己圈子 
                cnt[y] += cnt[x]; // 后者将前者圈子的人也融入自己圈子 
            }    
            k = l; // 后者变成前者 
        }
    }

    int maxx = 0;
    for(int i = 1; i &lt;= n; i++)
        maxx = max(maxx, cnt[i]);

    cout&lt;&lt;maxx;    
    return 0;
}
</code></pre>
